#include <iostream>
#include <cstring>

using namespace std;

struct Student {
  int roll_number;
  string first_name;
  string last_name;
  float cgpa;
};

class StudentRecordManagement {
 private:
  Student students[100];
  int num_students;

 public:
  StudentRecordManagement() {
    num_students = 0;
  }

  void addStudent() {
    if (num_students == 100) {
      cout << "Student record full!" << endl;
      return;
    }

    cout << "Enter student details:" << endl;
    cout << "Roll number: ";
    cin >> students[num_students].roll_number;
    cin.ignore(); // Clear input buffer

    cout << "First name: ";
    getline(cin, students[num_students].first_name);

    cout << "Last name: ";
    getline(cin, students[num_students].last_name);

    cout << "CGPA: ";
    cin >> students[num_students].cgpa;

    num_students++;
  }

  void displayStudents() {
    if (num_students == 0) {
      cout << "No students found!" << endl;
      return;
    }

    cout << "Student Records:" << endl;
    for (int i = 0; i < num_students; i++) {
      cout << "Roll number: " << students[i].roll_number << endl;
      cout << "Name: " << students[i].first_name << " " << students[i].last_name << endl;
      cout << "CGPA: " << students[i].cgpa << endl << endl;
    }
  }

  void searchStudent() {
    int roll_number;

    cout << "Enter roll number to search: ";
    cin >> roll_number;

    bool found = false;
    for (int i = 0; i < num_students; i++) {
      if (students[i].roll_number == roll_number) {
        cout << "Student Found:" << endl;
        cout << "Roll number: " << students[i].roll_number << endl;
        cout << "Name: " << students[i].first_name << " " << students[i].last_name << endl;
        cout << "CGPA: " << students[i].cgpa << endl;
        found = true;
        break;
      }
    }

    if (!found) {
      cout << "Student not found!" << endl;
    }
  }

  void updateStudent() {
    int roll_number;

    cout << "Enter roll number to update: ";
    cin >> roll_number;

    bool found = false;
    for (int i = 0; i < num_students; i++) {
      if (students[i].roll_number == roll_number) {
        cout << "Enter new student details:" << endl;
        cout << "First name: ";
        getline(cin, students[i].first_name);

        cout << "Last name: ";
        getline(cin, students[i].last_name);

        cout << "CGPA: ";
        cin >> students[i].cgpa;

        found = true;
        break;
      }
    }

    if (!found) {
      cout << "Student not found!" << endl;
    }
  }
};

int main() {
  StudentRecordManagement record;

  int choice;
  while (true) {
    cout << "\nStudent Record Management System" << endl;
    cout << "1. Add Student" << endl;
    cout << "2. Display Students" << endl;
    cout << "3. Search Student" << endl;
    cout << "4. Update Student" << endl;
    cout << "5. Exit" << endl;
    cout << "Enter your choice: ";
    cin >> choice;

    switch (choice) {
      case 1:
        record.addStudent();
        break;
      case 2:
        record.displayStudents();
        break;
      case 3:
        record.searchStudent();
        break;
      case 4:
        record.update
